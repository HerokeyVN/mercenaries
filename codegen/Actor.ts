/* tslint:disable */
/* eslint-disable */
/*
 * Autogenerated by @creditkarma/thrift-typescript v3.7.6
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
*/
import * as thrift from "thrift";
export interface IActorArgs {
    user_id?: string;
    username?: string;
    avatar_url?: string;
}
export class Actor {
    public user_id?: string;
    public username?: string;
    public avatar_url?: string;
    constructor(args?: IActorArgs) {
        if (args != null && args.user_id != null) {
            this.user_id = args.user_id;
        }
        if (args != null && args.username != null) {
            this.username = args.username;
        }
        if (args != null && args.avatar_url != null) {
            this.avatar_url = args.avatar_url;
        }
    }
    public write(output: thrift.TProtocol): void {
        output.writeStructBegin("Actor");
        if (this.user_id != null) {
            output.writeFieldBegin("user_id", thrift.Thrift.Type.STRING, 1);
            output.writeString(this.user_id);
            output.writeFieldEnd();
        }
        if (this.username != null) {
            output.writeFieldBegin("username", thrift.Thrift.Type.STRING, 2);
            output.writeString(this.username);
            output.writeFieldEnd();
        }
        if (this.avatar_url != null) {
            output.writeFieldBegin("avatar_url", thrift.Thrift.Type.STRING, 3);
            output.writeString(this.avatar_url);
            output.writeFieldEnd();
        }
        output.writeFieldStop();
        output.writeStructEnd();
        return;
    }
    public static read(input: thrift.TProtocol): Actor {
        input.readStructBegin();
        let _args: any = {};
        while (true) {
            const ret: thrift.TField = input.readFieldBegin();
            const fieldType: thrift.Thrift.Type = ret.ftype;
            const fieldId: number = ret.fid;
            if (fieldType === thrift.Thrift.Type.STOP) {
                break;
            }
            switch (fieldId) {
                case 1:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_1: string = input.readString();
                        _args.user_id = value_1;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 2:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_2: string = input.readString();
                        _args.username = value_2;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 3:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_3: string = input.readString();
                        _args.avatar_url = value_3;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                default: {
                    input.skip(fieldType);
                }
            }
            input.readFieldEnd();
        }
        input.readStructEnd();
        return new Actor(_args);
    }
}
